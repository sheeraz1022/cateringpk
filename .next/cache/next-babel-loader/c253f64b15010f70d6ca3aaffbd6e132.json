{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/sheeraz.shaikh/code/cateringpk/components/ListingsPage.js\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport MyAppBar from './MyAppBar';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Listing from './Listing';\nimport { client } from '../client'; // import BuffetImg from 'buffet.jpg';\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundImage: `url('./buffet.jpg')`,\n    opacity: 0.2,\n    \"&::after\": {\n      content: '',\n      display: 'block',\n      position: 'absolute',\n      width: '100%',\n      height: '100%'\n    }\n  },\n  heading: {\n    paddingTop: 10,\n    paddingBottom: 20,\n    paddingLeft: 0,\n    paddingRight: 0\n  },\n  listing: {\n    maxWidth: 748\n  },\n  media: {\n    height: 280\n  }\n});\n\nfunction ListingsPage(props) {\n  const classes = useStyles();\n  const {\n    0: caterers,\n    1: setCaterers\n  } = useState([]);\n  useEffect(() => {\n    client.getEntries().then(response => {\n      console.log('Response ==> ', response);\n      setCaterers(response.items);\n    }).catch(console.error);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MyAppBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"./buffet.jpg\",\n      height: \"400px\",\n      width: \"100%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.heading,\n        variant: \"h5\",\n        display: \"block\",\n        children: \"Catering Services in Karachi\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 8,\n        children: caterers.map(({\n          fields: {\n            name,\n            rate,\n            speciality,\n            description,\n            image: {\n              fields: {\n                file: url\n              }\n            }\n          }\n        }) => {\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Listing, {\n              rate: rate,\n              heading: name,\n              speciality: speciality,\n              description: description,\n              image: url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 28\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\nListingsPage.propTypes = {};\nexport default ListingsPage;","map":{"version":3,"sources":["/Users/sheeraz.shaikh/code/cateringpk/components/ListingsPage.js"],"names":["React","Fragment","useState","useEffect","makeStyles","PropTypes","MyAppBar","Grid","Typography","Container","Listing","client","useStyles","root","backgroundImage","opacity","content","display","position","width","height","heading","paddingTop","paddingBottom","paddingLeft","paddingRight","listing","maxWidth","media","ListingsPage","props","classes","caterers","setCaterers","getEntries","then","response","console","log","items","catch","error","map","fields","name","rate","speciality","description","image","file","url","propTypes"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types'\nimport MyAppBar from './MyAppBar'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport Listing from './Listing'\nimport { client } from '../client';\n// import BuffetImg from 'buffet.jpg';\n\nconst useStyles = makeStyles({\n    root: {\n        backgroundImage: `url('./buffet.jpg')`,\n        opacity: 0.2,\n        \"&::after\":{\n            content: '',\n            display: 'block',\n            position: 'absolute',\n            width: '100%',\n            height: '100%'\n        }\n    },\n    heading: {\n        paddingTop: 10,\n        paddingBottom: 20,\n        paddingLeft: 0,\n        paddingRight: 0,\n    },\n    listing: {\n      maxWidth: 748,\n    },\n    media: {\n      height: 280,\n    },\n  });\n\nfunction ListingsPage(props) {\n    const classes = useStyles();\n    const [caterers, setCaterers] = useState([]);\n\n    useEffect(() => {\n        client.getEntries().then((response) => {\n            console.log('Response ==> ', response)\n            setCaterers(response.items);\n        }).catch(console.error)\n    }, [])\n\n    return (\n    <Fragment>\n        <MyAppBar />\n            \n            <img src=\"./buffet.jpg\" height=\"400px\" width=\"100%\"/>\n            <Container className={classes.root}>\n            \n            <Typography className={classes.heading} variant=\"h5\" display=\"block\">\n                Catering Services in Karachi\n            </Typography>\n            <Grid container spacing={8}>\n                {caterers.map(({fields: {name, rate, speciality, description, image: {fields: {file: url}}}}) => { \n                    return <Grid item>\n                        <Listing rate={rate} heading={name} speciality={speciality} description={description} image={url}/>\n                    </Grid>\n                })}\n\n                   \n                \n                \n            </Grid>\n            </Container>\n            \n    </Fragment>\n    )\n}\n\nListingsPage.propTypes = {\n\n}\n\nexport default ListingsPage\n\n"]},"metadata":{},"sourceType":"module"}